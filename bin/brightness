#!/usr/bin/env python
UP = object()
DOWN = object()

def optparse():
    from sys import argv
    try:
        arg = argv[1]
    except IndexError:
        return None, None

    try:
        return int(arg), None
    except ValueError:
        pass

    if arg in ('+', 'up'):
        return None, UP
    elif arg in ('-', 'down'):
        return None, DOWN
    else:
        exit("Unknown argument: %r" % arg)

def set(brightness):
    with open('/sys/class/backlight/intel_backlight/brightness', 'w') as led:
        led.write(str(brightness))

def get():
    with open('/sys/class/backlight/intel_backlight/brightness') as led:
        return int(led.read())


def run(cmd):
    from subprocess import Popen
    p = Popen(cmd)
    p.wait()

def main():
    value, direction = optparse()
    if value is not None:
        return set(value)

    value = get()
    if direction is UP:
        set(max(value * 2, 1))
    elif direction is DOWN:
        set(value / 2)
    else:
        print get()

    return
    """
case "$1" in
    ''|*[!0-9]*) echo bad ;;
    *) echo good ;;
esac
if [[ "$1" ==  "+" || "$1" == "up" ]]; then
    BRIGHTNESS=$(cat /sys/class/backlight/intel_backlight/brightness)
    BRIGHTNESS=$(($BRIGHTNESS * 2))
    sudo sh -c 'echo '"$BRIGHTNESS"' > /sys/class/backlight/intel_backlight/brightness'
elif [[ "$1" ==  "-" || "$1" == "down" ]]; then
    BRIGHTNESS=$(cat /sys/class/backlight/intel_backlight/brightness)
    BRIGHTNESS=$(($BRIGHTNESS / 2))
    sudo sh -c 'echo '"$BRIGHTNESS"' > /sys/class/backlight/intel_backlight/brightness'
elif [[ "$1" ]]; then
    BRIGHTNESS="$1"
    sudo sh -c 'echo '"$BRIGHTNESS"' > /sys/class/backlight/intel_backlight/brightness'
fi

echo Current Brightness: $(cat /sys/class/backlight/intel_backlight/brightness)
"""

if __name__ == '__main__':
    exit(main())
