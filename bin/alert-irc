#!/usr/bin/env python
import os

BUFSIZE = 2**11 # unrealIRCd seems to use 2k buffers
VERBOSE = os.environ.get('VERBOSE', '')

def show(msg):
    from sys import stdout
    stdout.write(msg)


def send(irc, msg):
    if VERBOSE:
        show('>> ' + msg)
    irc.send(msg)


def recv(irc):
    data = irc.recv(BUFSIZE)
    if VERBOSE:
        show('<< ' + data)
    return data


def main():
    """the entry point"""
    network = 'irc.yelpcorp.com'
    port = 6697

    user = os.environ['USER']
    channel = os.environ.get('CHANNEL', user)

    import sys
    message = ' '.join(sys.argv[1:])
    if not message:
        message = "it's done!"

    import socket, ssl
    irc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    irc = ssl.wrap_socket(irc)
    irc.connect((network, port))

    send(irc, 'PASS thunderb1rd\r\n')
    send(irc, 'NICK %s-bot\r\n' % user)
    send(
        irc,
        'USER %(user)s-bot %(user)s-bot '
            '%(user)s-bot :%(user)s\'s alert bot\r\n'
            % dict(user=user),
    )

    data = True
    while data:
        data = recv(irc)
        if data.startswith('PING'):
            send(irc, 'PONG ' + data.split() [ 1 ] + '\r\n')
            send(irc, 'PRIVMSG %s :%s\r\n' % (channel, message))
            break
    recv(irc)
    send(irc, 'QUIT\r\n')


if __name__ == '__main__':
    exit(main())
