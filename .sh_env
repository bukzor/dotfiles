#!/not/executable/bash
# interactive environment that should be shared by bash and zsh
# commands that must be run just once for each new terminal
# generally, this is environment variables
# if your command needs to be run for each new *shell* use ~/.sh_rc

# ensure access to private dotfiles
if command -v prodcertstatus && ! prodcertstatus --check_remaining_hours 8; then
  prodaccess
fi

# extra shell environment for work
if [ -f ~/private-dotfiles/.sh_env ]; then
    . ~/private-dotfiles/.sh_env
fi

# save/restore our $PATH, so that we can (re-)source this file idempotently
# currently this is the only environment variable we modify (rather than overwrite), but we should do this for all such
if [ -z "$__orig_PATH" ]; then
  export __orig_PATH="$PATH"
else
  PATH="$__orig_PATH"
fi

# set PATH so it includes user's private bin if it exists
export PATH=~/.local/bin:~/.cargo/bin:~/private-dotfiles/bin:~/bin:"$PATH"
export GOPATH=~/prefix/gopath
export GDK_SCALE=2
export HOMEBREW_MAKE_JOBS="$(($(nproc) * 3))"
export HOMEBREW_VERBOSE=1
export HOMEBREW_BUILD_FROM_SOURCE=1
export PATH=~/.local/bin:"${PATH}"
export HOMEBREW="$(command -v brew)"
if [[ -x "$HOMEBREW" ]]; then
  eval "$($HOMEBREW shellenv)"
fi

#MY PREFERENCES ==============================================================
export EDITOR=vim
export VISUAL=$EDITOR
export GIT_EDITOR=$EDITOR
export P4DIFFOPTS="-u --color"
export P4DIFF="~/bin/p4-difftool"
export PYTHONSTARTUP=~/.pythonrc.py

if [ -z "$LANG" ]; then
  export LANG='en_US.UTF-8'
fi

# Set the default Less options.
export LESS='-XFR -i -M -w -z-4'
export PAGER=less
# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Browser
if echo "$OSTYPE" | grep -q '^darwin'; then
  export BROWSER='open'
fi

#unmap CTRL-S and CTRL-Q
if tty >/dev/null; then
  stty -ixon -ixoff
fi

# fix up TERM values
# get the session-leader's parent
terminal="$(ps -o ppid:1= "$(ps -o sid:1= $$ 2>/dev/null)" 2>/dev/null)"
if [ "$?" -eq 0 ]; then
  #use the basename of its arg[0]
  terminal="$(basename "$(head -zn1 /proc/$terminal/cmdline | tr -d '\0')")"
else
  # if our session-leader doesn't have a real parent (pid:0) then we're running as init
  terminal=init
fi
case "$terminal" in
lxterminal|gnome-terminal|xfce4-terminal)
  export TERM=xterm-256color
  ;;
tmux|"tmux: server")
  export TERM=screen-256color
  ;;
init)
  if [ "$TERM" != "linux" ]; then
    echo 'Warning, unknown terminal: "'"$terminal"'" (TERM='"$TERM)" >&2
  fi
  ;;
*)
  if ! echo "$TERM" | egrep -q '^(xterm|screen)-256color$'; then
    echo 'Warning, unknown terminal: "'"$terminal"'" (TERM='"$TERM)" >&2
  fi
  ;;
esac

# Further environment
export PREFIX="$(readlink -m "$HOME/../..")"
export GEM_HOME=~/prefix/rubygems
export REPO=$HOME/repo

# My very own python!
activate() { . ~/venv/mypy/bin/activate; }
if [ -f ~/venv/mypy/bin/activate ]; then
  activate
fi

export TMPDIR
for TMPDIR in \
    "$TMPDIR" \
    "$(cd $PREFIX/tmp; pwd)" \
    "/tmp/$USER" \
    "/tmp" \
    "/$HOME/tmp";
do
  if [ "$TMPDIR" ]; then
    mkdir -p -m 700 "$TMPDIR" 2>/dev/null
    chmod -f 700 "$TMPDIR"
    if [ -d "$TMPDIR" ] && [ -w "$TMPDIR" ]; then
      break
    fi
  fi
done

warn() { echo "[1;33mWARNING: [22m$@[0m"; }
if [ "$TMPDIR" ] && [ -d "$TMPDIR" ] && [ -w "$TMPDIR" ]; then
  TMPDIR="$(cd $TMPDIR; pwd)"
else
  unset TMPDIR
  warn 'No writable TMPDIR!' >&2
fi

# XDG {
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
if ! [ "$XDG_DATA_HOME" ]; then
  XDG_DATA_HOME="$HOME/.local/share"
  mkdir -p $XDG_DATA_HOME --mode 700
fi
if ! [ "$XDG_CONFIG_HOME" ]; then
  XDG_CONFIG_HOME="$HOME/.config"
  mkdir -p $XDG_CONFIG_HOME --mode 700
fi
XDG_DATA_DIRS="${XDG_DATA_DIRS:-usr/local/share/:/usr/share/}"
XDG_CONFIG_DIRS="${XDG_CONFIG_DIRS:-/etc/xdg}"
if ! [ "$XDG_CACHE_HOME" ]; then
  XDG_CACHE_HOME="$HOME/.cache"
  mkdir -p $XDG_CACHE_HOME --mode 700
fi
if ! [ "$XDG_RUNTIME_DIR" ]; then
  XDG_RUNTIME_DIR="$TMPDIR/runtime-$vnc_user"
  bootstamp="$(sed 's/^btime //; t; d' /proc/stat)"
  bootdir="$XDG_RUNTIME_DIR-$bootstamp"
  unset bootstamp

  mkdir -p $bootdir --mode 700 || true
  ln -sfn $bootdir -T $XDG_RUNTIME_DIR
  flock --nonblock $bootdir -c sleep infinity &
  flock --nonblock $XDG_RUNTIME_DIR -c sleep infinity &
  unset bootdir
fi
# } XDG

# added by travis gem
if [ -f ~/.travis/travis.sh ]; then
  . ~/.travis/travis.sh
fi
if command -v aactivator >/dev/null; then
  eval "$(aactivator init)"
fi

# vim:et:sw=2:sts=2:
