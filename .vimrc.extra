set textwidth=79
set colorcolumn=+1,+2,+3,+4,+5


function! s:HL(group, fg, bg)
  let histring = [ 'hi', a:group,
        \ 'guifg=' . a:fg[0], 'ctermfg=' . a:fg[1],
        \ 'guibg=' . a:bg[0], 'ctermbg=' . a:bg[1],
        \ ]

  execute join(histring, ' ')
endfunction

" cursor highlight {
    " highlight my current line and my current column, but only in my current window.
"    set cursorline | set cursorcolumn

    autocmd WinEnter * setlocal cursorline cursorcolumn
    if ! &diff
      autocmd WinLeave * setlocal nocursorline nocursorcolumn
    endif

    " Adjust highlight of cursor line and column.
    " autocmd ColorScheme * hi clear CursorLine CursorColumn ColorColumn Search
    " autocmd ColorScheme * hi CursorLine ctermbg=0 guibg=Black
    " autocmd ColorScheme * hi CursorColumn ctermbg=0 guibg=Black
    " autocmd ColorScheme * hi ColorColumn ctermbg=0 guibg=
    " autocmd ColorScheme * hi Search term=reverse cterm=reverse gui=reverse
    " autocmd ColorScheme * hi! link wat IncSearch
    " doautocmd ColorScheme
let s:gb = {}
let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54
let s:gb.dark2       = ['#504945', 239]     " 80-73-69
let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178
let s:gb.light4      = ['#a89984', 246]     " 168-153-132
  let s:bg1  = s:gb.dark1
  let s:bg2  = s:gb.dark2
  let s:fg1 = s:gb.light1
  let s:fg4 = s:gb.light4
" }

" functions {
function! s:SaveColors(fname, bang)
    exec 'redir' . a:bang . ' >' a:fname
    silent highlight
    redir END
endfunction
command! -bang -nargs=1 -complete=file -bar SaveColors call s:SaveColors(<f-args>, "<bang>")
" }

" vim:ft=vim:
